{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","App","useState","setTitle","setUserId","setTodos","isTitle","setIsTitle","isUser","setIsUser","setId","action","method","onSubmit","event","preventDefault","Number","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.399c268b.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id, title, completed, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {(user)\n        ? <UserInfo user={user} />\n        : 'NoName'}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { ChangeEvent, FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\n// import todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUserById(userId: number) {\n  const foundUser = usersFromServer.find((user: User) => (\n    user.id === userId\n  ));\n\n  return foundUser || null;\n}\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isTitle, setIsTitle] = useState(false);\n  const [isUser, setIsUser] = useState(false);\n  const [id, setId] = useState(0);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setIsTitle(false);\n    setTitle(value);\n  };\n\n  const handleChangeSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setIsUser(false);\n    setUserId(Number(value));\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (userId === 0) {\n      setIsUser(true);\n    }\n\n    if (title === '') {\n      setIsTitle(true);\n    }\n\n    if (title === '' || userId === 0) {\n      return;\n    }\n\n    setId(() => id + 1);\n\n    setTodos(() => {\n      return [...todos, {\n        id,\n        title,\n        completed: false,\n        userId,\n        user: getUserById(Number(userId)),\n      }];\n    });\n\n    if (title !== '' && userId !== 0) {\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            name=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleChange}\n          />\n          <span className=\"error\">\n            {(isTitle) && 'Please enter a title'}\n          </span>\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            name=\"userId\"\n            value={userId}\n            onChange={handleChangeSelect}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          <span className=\"error\">\n            {(isUser) && 'Please choose a user'}\n          </span>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <article data-id=\"1\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">\n            delectus aut autem\n          </h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"15\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">delectus aut autem</h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"2\" className=\"TodoInfo\">\n          <h2 className=\"TodoInfo__title\">\n            quis ut nam facilis et officia qui\n          </h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Julianne.OConner@kory.org\">\n            Patricia Lebsack\n          </a>\n        </article>\n      </section>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}